{"version":3,"sources":["components/audio/pirates.mp3","components/img/usersImages/myface.jpg","components/img/pokemons/pikachu.gif","components/img/pokemons/tortose.gif","components/img/pokemons/giphy.gif","components/img/bg.jpg","logo.svg","store/auth/actions.js","store/auth/reducers.js","store/registration/reducers.js","store/main/reducers.js","store/reducers.js","store/registration/actions.js","store/main/actions.js","components/Auth.jsx","components/AuthContainer.jsx","components/Registration.jsx","components/RegistrationContainer.jsx","components/Connected.jsx","store/sagas.js","components/Main.jsx","components/MainContainer.jsx","components/WebSocketConnection.jsx","App.jsx","index.js"],"names":["module","exports","putDataFromServer","dataFromServer","type","payload","loadDataToRequest","formData","ws","redirectToMainPage","defaultUserState","name","surname","login","password","photo","coins","accessToken","refreshToken","isAuthenticated","rememberMe","redirect","undefined","defaultRegistrationState","repeatPassword","defaultSlideShowState","slides","current","amount","status","combineReducers","auth","state","action","registration","main","length","className","next","Input","handler","touched","hasError","meta","htmlFor","label","placeholder","Registration","loginForm","FormBuilder","group","Validators","required","handleSubmit","e","preventDefault","console","log","value","props","this","to","control","render","get","invalid","id","onSubmit","style","width","margin","disabled","onClick","React","Component","AuthContainer","unauthenticated","mapDispatchToProps","connect","registrationForm","sendDataToServer","href","RegistrationContainer","Connected","dispatch","useDispatch","workerLoadSignInData","watchLoadSignInData","workerLoadSignUpData","watchLoadSignUpData","latestStateAuth","store","getState","json","JSON","stringify","send","takeEvery","latestStateReg","Main","startGame","bind","onLoadSlideShow","onPreviousSlideBtnClick","onNextSlideBtnClick","changeSlide","slideIntervalTimeout","previousSlide","nextSlide","loadSlideShow","document","querySelectorAll","componentDidUpdate","setInterval","body","background","Background","backgroundSize","src","audio","autoPlay","loop","controls","pikachu","height","tortoise","pokemon","MainContainer","pauseSlideShow","indexFromSaga","WebSocketConnection","url","WebSocket","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","App","wsc","connected","run","onClose","Connect","getMessages","that","onopen","setState","onclose","event","wasClean","alert","code","reason","setTimeout","ws2","onmessage","evt","data","parse","content","logo","alt","exact","path","PrivateRoute","children","rest","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.00821373.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pirates.dca56646.mp3\";","module.exports = __webpack_public_path__ + \"static/media/myface.36534e3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.50e7012b.gif\";","module.exports = __webpack_public_path__ + \"static/media/tortose.edfa16b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/giphy.de239fc7.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.751d7b6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const PUT_DATA_SIGN_IN = 'PUT_DATA_SIGN_IN';\nexport const LOAD_DATA_SIGN_IN = 'LOAD_DATA_SIGN_IN';\nexport const UNAUTHENTICATED_SIGN_IN ='UNAUTHENTICATED_SIGN_IN';\nexport const REDIRECT_TO_MAIN_PAGE = 'REDIRECT_TO_MAIN_PAGE';\n\nexport const putDataFromServer = (dataFromServer) => {\n    return {\n        type: PUT_DATA_SIGN_IN,\n        payload: dataFromServer\n    };\n};\n\nexport const loadDataToRequest = (formData, ws) => {\n    return {\n        type: LOAD_DATA_SIGN_IN,\n        payload: {formData, ws}\n    };\n};\n\nexport const unauthenticated = () => {\n    return {\n        type: UNAUTHENTICATED_SIGN_IN\n    };\n};\n\nexport const redirectToMainPage = () =>({\n    type: REDIRECT_TO_MAIN_PAGE\n});\n","import {LOAD_DATA_SIGN_IN, PUT_DATA_SIGN_IN, UNAUTHENTICATED_SIGN_IN,\n    REDIRECT_TO_MAIN_PAGE} from \"./actions\";\nimport {} from \"../registration/actions\";\n\nexport const defaultUserState = {\n    name: '',\n    surname: '',\n    login: '',\n    password: '',\n    photo: '',\n    coins: 0,\n    accessToken: '',\n    refreshToken: '',\n    isAuthenticated: false,\n    rememberMe: false,\n    redirect: undefined,\n    ws: undefined\n};\n\nexport const authReducer = (state = defaultUserState, action) => {\n\n    switch (action.type){\n        case LOAD_DATA_SIGN_IN:\n            return {...state, login: action.payload.formData.login, password: action.payload.formData.password,\n                rememberMe: action.payload.formData.rememberMe, ws: action.payload.ws};\n        case PUT_DATA_SIGN_IN:\n            return { ...state, name: action.payload.name, surname: action.payload.surname, photo: action.payload.photo,\n            accessToken: action.payload.accessToken, refreshToken: action.payload.refreshToken, isAuthenticated: true};\n        case UNAUTHENTICATED_SIGN_IN:\n            return { ...state, isAuthenticated: false};\n        case REDIRECT_TO_MAIN_PAGE:\n            return {...state, redirect: \"/main\"};\n        default:\n    }\n    return state;\n};\n","import {\n    CHANGE_LOGIN_SIGN_UP,\n    CHANGE_PASSWORD_SIGN_UP,\n    CHANGE_NAME_SIGN_UP,\n    CHANGE_SURNAME_SIGN_UP,\n    SEND_DATA_SIGN_UP, CHANGE_REPEAT_PASSWORD_SIGN_UP\n} from \"./actions\";\nexport const defaultRegistrationState = {\n    name: '',\n    surname: '',\n    login: '',\n    password: '',\n    repeatPassword: '',\n    ws: undefined\n};\n\nexport const registrationReducer = (state = defaultRegistrationState, action) => {\n    switch (action.type){\n        case CHANGE_LOGIN_SIGN_UP:\n            return {...state, login: action.payload};\n        case CHANGE_PASSWORD_SIGN_UP:\n            return {...state, password: action.payload};\n        case CHANGE_REPEAT_PASSWORD_SIGN_UP:\n            return {...state, repeatPassword: action.payload};\n        case CHANGE_NAME_SIGN_UP:\n            return {...state, name: action.payload};\n        case CHANGE_SURNAME_SIGN_UP:\n            return {...state, surname: action.payload};\n        case SEND_DATA_SIGN_UP:\n            return {...state,login: action.payload.formData.login, password: action.payload.formData.password,\n                repeatPassword: action.payload.formData.repeatPassword, name: action.payload.formData.name,\n                surname: action.payload.formData.surname, ws: action.payload.ws};\n        default:\n\n    }\n    return state;\n};","import {NEXT_SLIDE} from \"./actions\";\nimport {PREVIOUS_SLIDE} from \"./actions\";\nimport {PAUSE_SLIDE_SHOW} from \"./actions\";\nimport {LOAD_SLIDE_SHOW} from \"./actions\";\nimport {CHANGE_SLIDE} from \"./actions\";\n\nexport const defaultSlideShowState = {\n    slides: undefined,\n    current: 0,\n    amount: 0,\n    status: true\n};\n\nexport const mainReducer = (state = defaultSlideShowState, action) => {\n\n    switch (action.type){\n        case LOAD_SLIDE_SHOW:\n            return {...state, amount: action.payload.length, slides: action.payload};\n        case NEXT_SLIDE:{\n            let slides = state.slides;\n            slides[action.payload.current].className='slide';\n            slides[action.payload.next].className='slide showing';\n            return {...state, current: action.payload.next, slides: slides, status: false};\n        }\n\n        case PREVIOUS_SLIDE:{\n            let slides = state.slides;\n            slides[action.payload.current].className='slide';\n            slides[action.payload.next].className='slide showing';\n            return {...state, current: action.payload.next, slides: slides, status: false};\n        }\n\n        case PAUSE_SLIDE_SHOW:\n            return { ...state, status: false};\n        case CHANGE_SLIDE: {\n            let slides = state.slides;\n            slides[action.payload.current].className = 'slide';\n            slides[action.payload.next].className = 'slide showing';\n            return {...state, current: action.payload.next, slides: slides};\n        }\n        default:\n    }\n    return state;\n};\n","import {combineReducers} from \"redux\";\nimport {authReducer} from \"./auth/reducers\";\nimport {registrationReducer} from \"./registration/reducers\";\nimport {mainReducer} from \"./main/reducers\";\n\nexport default combineReducers({\n    auth: authReducer,\n    registration: registrationReducer,\n    main: mainReducer\n});\n","export const CHANGE_LOGIN_SIGN_UP = 'CHANGE_LOGIN_SIGN_UP';\nexport const CHANGE_PASSWORD_SIGN_UP = 'CHANGE_PASSWORD_SIGN_UP';\nexport const CHANGE_REPEAT_PASSWORD_SIGN_UP = 'CHANGE_REPEAT_PASSWORD_SIGN_UP';\nexport const CHANGE_NAME_SIGN_UP = 'CHANGE_NAME_SIGN_UP';\nexport const CHANGE_SURNAME_SIGN_UP = 'CHANGE_SURNAME_SIGN_UP';\nexport const SEND_DATA_SIGN_UP = 'SEND_DATA_SIGN_UP';\n\nexport const setRepeatPasswordSignUp = repeatPassword =>({\n    type: CHANGE_REPEAT_PASSWORD_SIGN_UP,\n    payload: repeatPassword\n});\nexport const sendDataToServer = (formData, ws) =>({\n    type: SEND_DATA_SIGN_UP,\n    payload: {formData: formData, ws: ws}\n});","import {store} from \"../../App\";\nexport const NEXT_SLIDE = 'NEXT_SLIDE';\nexport const PREVIOUS_SLIDE = 'PREVIOUS_SLIDE';\nexport const PAUSE_SLIDE_SHOW = 'PAUSE_SLIDE_SHOW';\nexport const LOAD_SLIDE_SHOW = 'LOAD_SLIDE_SHOW';\nexport const CHANGE_SLIDE = 'CHANGE_SLIDE';\n\n\nexport const nextSlide = () => {\n    let slides = store.getState().main.slides;\n    const current = store.getState().main.current;\n    // slides[current].className = 'slide';\n    const next = (current + 1) % slides.length;\n    // slides[index].className = 'slide showing';\n    return {\n        type: NEXT_SLIDE,\n        payload: {next: next, current: current}\n    };\n};\n\nexport const previousSlide = () => {\n    const length = store.getState().main.slides.length;\n    const current = store.getState().main.current;\n    let next = (store.getState().main.current - 1 + length) % length;\n    return {\n        type: PREVIOUS_SLIDE,\n        payload: {next: next, current: current}\n    };\n};\n\nexport const pauseSlideShow = () => {\n    return {\n        type: PAUSE_SLIDE_SHOW\n    };\n};\nexport const loadSlideShow = (slides) => {\n    return {\n        type: LOAD_SLIDE_SHOW,\n        payload: slides\n    };\n};\nexport const changeSlide = (indexFromSaga) => {\n    const length = store.getState().main.slides.length;\n    const current = store.getState().main.current;\n    let next = indexFromSaga % length;\n    return {\n        type: CHANGE_SLIDE,\n        payload: {next: next, current: current}\n    };\n};\n\n\n","import React from 'react';\nimport {Link, Redirect } from \"react-router-dom\";\nimport {\n    FormBuilder,\n    FieldGroup,\n    FieldControl,\n    Validators,\n} from \"react-reactive-form\";\nimport {putDataFromServer, redirectToMainPage, unauthenticated} from \"../store/auth/actions\";\nconst Input = ({ handler, touched, hasError, meta}) => (\n    <div>\n        <label htmlFor={`${meta.name}`}><b>{meta.label}</b></label>\n        <input type={`${meta.type}`} placeholder={`Enter ${meta.label}`} name={`${meta.name}`} {...handler()}/>\n        <span>{touched && hasError(\"required\") && `${meta.label} is required`}</span>\n    </div>\n);\nexport default class Registration extends React.Component {\n    loginForm = FormBuilder.group({\n        login: [\"\", Validators.required],\n        password: [\"\", Validators.required],\n        rememberMe: false\n    });\n\n    handleSubmit=(e) => {\n        e.preventDefault();\n        console.log(\"Form values\", this.loginForm.value);\n        this.props.loadDataToRequest(this.loginForm.value, this.props.ws);\n        // let that = this;\n        // this.props.ws.onmessage = function (evt) {\n        //     console.log(evt.data);\n        //     let data = JSON.parse(evt.data);\n        //     console.log(\"object\", data);\n        //     console.log(\"name\", data.Name);\n        //     console.log(\"surname\", data.Surname);\n        //     console.log(\"login\", data.Login);\n        //     console.log(\"dataFromServer: \", data);\n        //     if (data.message === \"Unauthorized\") {\n        //         that.props.unauthenticated();\n        //     } else {\n        //         that.props.putDataFromServer(data);\n        //         that.props.redirectToMainPage();\n        //     }\n        // };\n    };\n    render() {\n        if (this.props.redirect) {\n            return <Redirect to={this.props.redirect} />\n        }\n        return (\n            <FieldGroup\n                control={this.loginForm}\n                render={({ get, invalid }) => (\n                    <form id=\"SignIn\" onSubmit={this.handleSubmit}>\n                        <div className=\"container\">\n                        <h1>LOGIN</h1>\n                        <p>Please fill in this form to Login.</p>\n                        <hr/>\n                            <FieldControl\n                                name=\"login\"\n                                render={Input}\n                                meta={{ label: \"Login\", name: \"login\", type: \"text\"}}\n                            />\n\n                            <FieldControl\n                                name=\"password\"\n                                render={Input}\n                                meta={{ label: \"Password\", name: \"password\", type: \"password\" }}\n                            />\n\n                            <FieldControl\n                                name=\"rememberMe\"\n                                render={({handler}) => (\n                                    <div>\n                                        <label htmlFor=\"rememberMe\"><b>Remember me</b></label>\n                                        <input name=\"rememberMe\" style={{width: 'auto', margin: '1vw'}}{...handler(\"checkbox\")}/>\n                                    </div>\n                                )}\n                            />\n                        </div>\n                        Please fill in this form to create an account.\n\n                        Login\n                        <button type=\"submit\" disabled={invalid} className=\"registerbtn\" onClick={this.onSubmit}>Login</button>\n                        <div className=\"container signin\">\n                            <p>Create an account? <Link to=\"/signUp\">Sign Up</Link></p>\n                        </div>\n                    </form>\n                )}\n            />\n        );\n    }\n}\n\n// export default class Auth extends React.Component {\n//     onSubmit(e) {\n//         e.preventDefault();\n//         this.props.loadDataToRequest(this.props.login, this.props.password);\n//     }\n//     onLoginChange(event){\n//         this.props.setLoginSignIn(event.target.value);\n//     }\n//     onPasswordChange(event){\n//         this.props.setPasswordSignIn(event.target.value);\n//     }\n//     constructor(props) {\n//         super(props);\n//         this.onSubmit = this.onSubmit.bind(this);\n//         this.onLoginChange = this.onLoginChange.bind(this);\n//         this.onPasswordChange = this.onPasswordChange.bind(this);\n//     }\n//\n//     render() {\n//         if (this.props.redirect) {\n//             return <Redirect to={this.props.redirect} />\n//         }\n//         return (\n//\n//             <form id=\"SignIn\">\n//                 <div className=\"container\">\n//                     <h1>LOGIN</h1>\n//                     <p>Please fill in this form to Login.</p>\n//                     <hr/>\n//                     <label htmlFor=\"Login\"><b>Login</b></label>\n//                     <input type=\"text\" id=\"login\" placeholder=\"Enter Login\" name=\"login\" value={this.props.login}\n//                            onChange={this.onLoginChange} required/>\n//                     <label htmlFor=\"password\"><b>Password</b></label>\n//                     <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" name=\"password\"\n//                            value={this.props.password} onChange={this.onPasswordChange} required/>\n//                         <button type=\"submit\" className=\"registerbtn\" onClick={this.onSubmit}> Login</button>\n//                 </div>\n//                 <div className=\"container signin\">\n//                     <p>Create an account? <Link to=\"/signUp\">Sign Up</Link></p>\n//                 </div>\n//             </form>\n//\n//         );\n//     }\n// }","import React from 'react';\nimport {connect} from 'react-redux';\nimport {loadDataToRequest, putDataFromServer, redirectToMainPage, unauthenticated} from \"../store/auth/actions\";\nimport Auth from './Auth';\n\nclass AuthContainer extends React.Component {\n    render() {\n        return <Auth ws={this.props.ws}\n            redirect={this.props.redirect} unauthenticated={this.props.unauthenticated}\n            putDataFromServer={this.props.putDataFromServer} redirectToMainPage={this.props.redirectToMainPage}\n        loadDataToRequest={this.props.loadDataToRequest} />;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        name: state.auth.name,\n        surname: state.auth.surname,\n        login: state.auth.login,\n        password: state.auth.password,\n        photo: state.auth.photo,\n        coins: state.auth.coins,\n        accessToken: state.auth.accessToken,\n        refreshToken: state.auth.refreshToken,\n        redirect: state.auth.redirect\n    };\n};\n\nconst mapDispatchToProps = {\n    loadDataToRequest, unauthenticated, putDataFromServer, redirectToMainPage\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer);","import React from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {\n    FormBuilder,\n    FieldGroup,\n    FieldControl,\n    Validators,\n} from \"react-reactive-form\";\nconst Input = ({ handler, touched, hasError, meta}) => (\n    <div>\n        <label htmlFor={`${meta.name}`}><b>{meta.label}</b></label>\n        <input type={`${meta.type}`} placeholder={`Enter ${meta.label}`} name={`${meta.name}`} {...handler()}/>\n        <span>{touched && hasError(\"required\") && `${meta.label} is required`}</span>\n    </div>\n);\nexport default class Registration extends React.Component {\n    registrationForm = FormBuilder.group({\n        login: [\"\", Validators.required],\n        password: [\"\", Validators.required],\n        repeatPassword: [\"\", Validators.required],\n        name: [\"\", Validators.required],\n        surname: [\"\", Validators.required],\n        rememberMe: false\n    });\n    handleSubmit=(e) => {\n        e.preventDefault();\n        console.log(\"Form values\", this.registrationForm.value);\n        this.props.sendDataToServer(this.registrationForm.value, this.props.ws);\n        // this.props.ws.onmessage = function (evt) {\n        //     console.log(evt.data);\n        //     let data = JSON.parse(evt.data);\n        //     console.log(\"object\", data);\n        //     if (data.status === 200) {\n        //         that.props.loadDataToRequest(that.registrationForm.value, that.props.ws);\n        //     }else {\n        //         alert(data.message);\n        //         that.props.unauthenticated();\n        //     }\n        // };\n\n        // if (data.status === 200) {\n        //     const latestState = store.getState();\n        //     yield put(loadDataToRequest(latestState.registration.login, latestState.registration.password));\n        // } else {\n        //     alert(data.message);\n        //     yield put(unauthenticated());\n        // }\n    };\n    render() {\n        if (this.props.redirect) {\n            return <Redirect to={this.props.redirect} />\n        }\n        return (\n            <FieldGroup\n                control={this.registrationForm}\n                render={({ get, invalid }) => (\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"container\">\n                        <h1>REGISTRATION</h1>\n                        <p>Please fill in this form to create an account.</p>\n                        <hr/>\n                        <FieldControl\n                            name=\"login\"\n                            render={Input}\n                            meta={{ label: \"Login\", name: \"login\", type: \"text\"}}\n                        />\n\n                        <FieldControl\n                            name=\"password\"\n                            render={Input}\n                            meta={{ label: \"Password\", name: \"password\", type: \"password\" }}\n                        />\n                        <FieldControl\n                            name=\"repeatPassword\"\n                            render={Input}\n                            meta={{ label: \"Repeat password\", name: \"repeatPassword\", type: \"password\" }}\n                        />\n                        <FieldControl\n                            name=\"name\"\n                            render={Input}\n                            meta={{ label: \"Name\", name: \"name\", type: \"text\" }}\n                        />\n\n                        <FieldControl\n                            name=\"surname\"\n                            type=\"text\"\n                            render={Input}\n                            meta={{ label: \"Surname\", name: \"surname\", type: \"text\" }}\n                        />\n\n                        <FieldControl\n                            name=\"rememberMe\"\n                            render={({handler}) => (\n                                <div>\n                                    <label htmlFor=\"rememberMe\"><b>Remember me</b></label>\n                                    <input name=\"rememberMe\" style={{width: 'auto', margin: '1vw'}}{...handler(\"checkbox\")}/>\n                                </div>\n                            )}\n                        />\n                        </div>\n                        <hr/>\n                            <p>By creating an account you agree to our <a href=\"#\">Terms & Privacy</a>.</p>\n                        <button type=\"submit\" disabled={invalid} className=\"registerbtn\" onClick={this.onSubmit}>Register</button>\n                        <div className=\"container signin\">\n                            <p>Already have an account? <Link to=\"/\">Sign in</Link></p>\n                        </div>\n                    </form>\n                )}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    sendDataToServer,\n    setRepeatPasswordSignUp\n} from \"../store/registration/actions\";\nimport Registration from './Registration';\n\nclass RegistrationContainer extends React.Component {\n    render() {\n        return <Registration ws={this.props.ws} sendDataToServer={this.props.sendDataToServer}\n                             redirect={this.props.redirect}/>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        login: state.registration.login,\n        password: state.registration.password,\n        repeatPassword: state.registration.repeatPassword,\n        name: state.registration.name,\n        surname: state.registration.surname,\n        redirect: state.auth.redirect\n    };\n};\n\nconst mapDispatchToProps = {\n    sendDataToServer\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationContainer);","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport { loadDataToRequest } from '../store/auth/actions';\n\n\nexport const Connected = () => {\n    const dispatch = useDispatch();\n    const onClick = () => dispatch(loadDataToRequest());\n\n\n    return(\n        <div>\n            <button type=\"submit\" className=\"registerbtn\" onClick={onClick}>Register</button>\n        </div>\n    );\n};\n","import {takeEvery} from 'redux-saga/effects';\nimport {LOAD_DATA_SIGN_IN} from \"./auth/actions\";\nimport {SEND_DATA_SIGN_UP} from \"./registration/actions\";\nimport {store} from \"../App\"\n\nfunction* workerLoadSignInData() {\n    console.log('workerLoadSignInData is working');\n    let latestStateAuth = store.getState().auth;\n    latestStateAuth.type = \"auth\";\n    console.log(\"latestStateAuth: \", latestStateAuth);\n    const ws = latestStateAuth.ws;\n    const json = JSON.stringify(latestStateAuth);\n    console.log(\"Отправка данных формы входа\");\n    console.log(\"Form data: \", json);\n    ws.send(json);\n\n}\n\nexport function* watchLoadSignInData() {\n    console.log(\"Data should be loaded\");\n    yield takeEvery(LOAD_DATA_SIGN_IN, workerLoadSignInData)\n}\n\nfunction* workerLoadSignUpData() {\n    console.log('workerLoadSignUpData is working');\n    let latestStateReg = store.getState().registration;\n    latestStateReg.type = \"registration\";\n    console.log(\"latestStateReg: \", latestStateReg);\n    const ws = latestStateReg.ws;\n    const json = JSON.stringify(latestStateReg);\n    console.log(\"Отправка данных формы регистрации\");\n    console.log(\"Form data: \", json);\n    ws.send(json);\n    // console.log(\"dataFromServer: \", data);\n    // if (data.status === 200) {\n    //     const latestState = store.getState();\n    //     yield put(loadDataToRequest(latestState.registration.login, latestState.registration.password));\n    // } else {\n    //     alert(data.message);\n    //     yield put(unauthenticated());\n    // }\n\n}\n\nexport function* watchLoadSignUpData() {\n    console.log(\"Data should be loaded\");\n    yield takeEvery(SEND_DATA_SIGN_UP, workerLoadSignUpData)\n}\n","import React from 'react';\nimport audio from './audio/pirates.mp3';\nimport photo from './img/usersImages/myface.jpg';\nimport pikachu from './img/pokemons/pikachu.gif';\nimport tortoise from './img/pokemons/tortose.gif';\nimport pokemon from './img/pokemons/giphy.gif';\nimport {Link} from \"react-router-dom\";\nimport Background from './img/bg.jpg';\nimport {store} from \"../App\";\nimport {changeSlide} from \"../store/main/actions\";\n\n\nexport default class Main extends React.Component {\n    startGame(e){\n        e.preventDefault();\n        console.log(\"Current: \", store.getState().main.current);\n        this.props.changeSlide(store.getState().main.current+1);\n        //There I should get number of slide\n    }\n    onPreviousSlideBtnClick(){\n        this.props.previousSlide();\n        console.log(\"Current: \", store.getState().main.current);\n    }\n    onNextSlideBtnClick(){\n        this.props.nextSlide();\n        console.log(\"Current: \", store.getState().main.current);\n    }\n    onLoadSlideShow(){\n        this.props.loadSlideShow(document.querySelectorAll('#slides .slide'));\n    }\n\n    constructor(props) {\n        super(props);\n        this.startGame=this.startGame.bind(this);\n        this.onLoadSlideShow=this.onLoadSlideShow.bind(this);\n        this.onPreviousSlideBtnClick=this.onPreviousSlideBtnClick.bind(this);\n        this.onNextSlideBtnClick=this.onNextSlideBtnClick.bind(this);\n        this.changeSlide=this.changeSlide.bind(this);\n        this.state={\n            slideIntervalTimeout: 4000\n        };\n    }\n    componentDidUpdate() {\n        console.log(\"Component Did Update\");\n        this.props.changeSlide(store.getState().main.current+1);\n        console.log(\"Current: \", store.getState().main.current);\n\n        // setTimeout(()=>{this.props.changeSlide(store.getState().main.current+1)}, this.state.slideIntervalTimeout);\n    }\n    changeSlide(){\n        if (store.getState().main.status===true) {\n            this.props.changeSlide(store.getState().main.current + 1);\n        }\n    }\n\n    componentDidMount(){\n        this.onLoadSlideShow();\n        this.componentDidUpdate();\n        let slideInterval = setInterval(this.changeSlide, this.state.slideIntervalTimeout);\n        // let setInterval(this.props.changeSlide(store.getState().main.current+1), this.state.slideIntervalTimeout);\n        // let index = 0;\n        // for( ;; ){\n        //     setTimeout(()=>{if(store.getState.main.status===false) return false }, 4000);\n        //     this.props.changeSlide(++index);\n        // }\n        // let slides = document.querySelectorAll('#slides .slide');\n        // let currentSlide = 0;\n        // let slideInterval = setInterval(nextSlide, 4000);\n        //\n        // function nextSlide() {\n        //     goToSlide(currentSlide + 1);\n        // }\n        //\n        // function previousSlide() {\n        //     goToSlide(currentSlide - 1);\n        // }\n        //\n        // function goToSlide(n) {\n        //     slides[currentSlide].className = 'slide';\n        //     currentSlide = (n + slides.length) % slides.length;\n        //     slides[currentSlide].className = 'slide showing';\n        // }\n        //\n        // let playing = true;\n        //\n        // function pauseSlideshow() {\n        //     playing = false;\n        //     clearInterval(slideInterval);\n        // }\n        //\n        // let next = document.getElementById('next');\n        // let previous = document.getElementById('previous');\n        // next.onclick = function() {\n        //     pauseSlideshow();\n        //     nextSlide();\n        // };\n        // previous.onclick = function() {\n        //     pauseSlideshow();\n        //     previousSlide();\n        // };\n    }\n\n\n    render() {\n        document.body.style.background = `url(${Background}) no-repeat`;\n        document.body.style.backgroundSize = \"cover\";\n        // document.onLoad=this.MainScript;\n        console.log(\"RENDER\");\n        return (\n            <div>\n                <div id=\"authorized_user\">\n                    <audio id=\"bgSound\" src={audio} autoPlay loop controls/>\n                    <Link to=\"/profile\" className=\"userMenuElements\">My Profile</Link>\n                    <Link to=\"/messages\" className=\"userMenuElements\">My Messages</Link>\n                    <Link to=\"/events\" id=\"events\">My Events</Link>\n                    <p id=\"username\">Иван Сукач</p>\n                    <Link to=\"/addPhoto\" id=\"linkToChangePhoto\">\n                        <img src={photo} id=\"userPhoto\"/>\n                    </Link>\n                </div>\n                <div id=\"prompt\">CHOOSE POKEMON</div>\n                <div id=\"slideShow\">\n                    <button className=\"controls\" id=\"previous\" onClick={this.onPreviousSlideBtnClick}>&lt;</button>\n                    <ul id=\"slides\">\n                        <li className=\"slide showing\">\n                            <img src={pikachu} width=\"100%\" height=\"100%\"/>\n                        </li>\n                        <li className=\"slide\">\n                            <img src={tortoise} width=\"100%\" height=\"100%\"/>\n                        </li>\n                        <li className=\"slide\">\n                            <img src={pokemon} width=\"100%\" height=\"100%\"/>\n                        </li>\n                    </ul>\n                    <button className=\"controls\" id=\"next\" onClick={this.onNextSlideBtnClick}>&gt;</button>\n                </div>\n                <button id=\"start\" onClick={this.startGame}>START</button>\n                {/*    <script src=\"../js/users.js\"></script>*/}\n            </div>\n    );\n\n    }\n    }","import React from 'react';\nimport {connect} from 'react-redux';\nimport {nextSlide, previousSlide, changeSlide, pauseSlideShow, loadSlideShow} from \"../store/main/actions\";\nimport Main from './Main';\n\nclass MainContainer extends React.Component {\n    render() {\n        return <Main loadSlideShow={this.props.loadSlideShow} nextSlide={this.props.nextSlide}\n                     previousSlide={this.props.previousSlide} pauseSlideShow={this.props.pauseSlideShow}\n        changeSlide={this.props.changeSlide}/>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        name: state.auth.name,\n        surname: state.auth.surname,\n        login: state.auth.login,\n        password: state.auth.password,\n        photo: state.auth.photo,\n        coins: state.auth.coins,\n        accessToken: state.auth.accessToken,\n        refreshToken: state.auth.refreshToken\n\n    };\n};\n\nconst mapDispatchToProps = {\n    loadSlideShow, nextSlide, previousSlide, pauseSlideShow, changeSlide\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","import Registration from './Registration';\nexport default class WebSocketConnection{\n    constructor(url) {\n        let ws = new WebSocket(url);\n\n        // ws.onclose = function(event) {\n        //         if (event.wasClean) {\n        //             alert(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n        //         } else {\n        //             setTimeout(()=>{\n        //                 console.log(\"Connection died\");\n        //                 let ws2 = new WebSocket(url);\n        //                 ws2.onclose=ws.onclose;\n        //                 ws2.onopen=ws.onopen;\n        //                 ws2.onmessage=ws.onmessage;\n        //                 ws=ws2\n        //                 }, 1000)\n        //\n        //         }\n        //     };\n        this.ws = ws\n    }\n};\n","import React from 'react';\nimport {applyMiddleware, createStore} from \"redux\";\nimport combineReducers from \"./store/reducers\"\nimport {Provider} from \"react-redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport AuthContainer from \"./components/AuthContainer\";\nimport RegistrationContainer from \"./components/RegistrationContainer\";\nimport {Connected} from \"./components/Connected\";\nimport {watchLoadSignInData, watchLoadSignUpData} from \"./store/sagas\";\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport {loadDataToRequest, putDataFromServer, redirectToMainPage, unauthenticated} from \"./store/auth/actions\";\nimport MainContainer from \"./components/MainContainer\";\nimport wsc from \"./components/WebSocketConnection\";\nimport logo from './logo.svg';\nimport './App.css';\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(combineReducers, applyMiddleware(logger, sagaMiddleware));\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"Creation wsc in App.jsx\");\n        this.state={\n            ws: new wsc(\"ws://localhost:8081/ws\").ws,\n            connected: false\n        };\n        sagaMiddleware.run(watchLoadSignInData);\n        sagaMiddleware.run(watchLoadSignUpData);\n        this.onClose();\n        this.Connect();\n        this.getMessages();\n    }\n    Connect() {\n        let that = this;\n        this.state.ws.onopen = function () {\n            console.log('Connected');\n            // console.log(that.state.ws.url);\n            that.setState({...that.state, connected:true});\n            that.render()\n        }\n    }\n    onClose(){\n        let that = this;\n        this.state.ws.onclose = function(event) {\n            if (event.wasClean) {\n                alert(`[close] Connection closed cleanly, code=${event.code} reason=${event.reason}`);\n            } else {\n                setTimeout(()=>{\n                    console.log(\"Connection died\");\n                    let ws2 = new WebSocket(that.state.ws.url);\n                    ws2.onclose=that.state.ws.onclose;\n                    ws2.onopen=that.state.ws.onopen;\n                    ws2.onmessage=that.state.ws.onmessage;\n                    that.setState({ws:ws2, connected:false});\n\n                }, 1000)\n\n            }\n        };\n    }\n    getMessages() {\n        let ws = this.state.ws;\n        ws.onmessage = function (evt) {\n            console.log(\"Message has been received\");\n            console.log(evt.data);\n            let data = JSON.parse(evt.data);\n            switch (data.type) {\n                case \"auth\":\n                    let content = JSON.parse(data.content);\n                    store.dispatch(putDataFromServer(content));\n                    store.dispatch(redirectToMainPage());\n                    break;\n                case \"registration\":\n                    store.dispatch(loadDataToRequest(store.getState().registration, ws));\n                    break;\n                case \"error\":\n                    alert(data.content);\n                    break;\n                default:\n                    alert( \"Unexpected type\" );\n            }\n        };\n    }\n\n    render() {\n        if (this.state.connected === false){\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        <p>Подключение к серверу</p>\n                    </header>\n                </div>\n            );\n        } else {\n            return (\n                <Provider store={store}>\n                    <Router>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <AuthContainer ws={this.state.ws}/>\n                            </Route>\n                            <Route exact path=\"/signUp\">\n                                <RegistrationContainer ws={this.state.ws}/>\n                            </Route>\n                            <Route exact path=\"/connected\">\n                                <Connected/>\n                            </Route>\n                            <PrivateRoute path=\"/main\">\n                                <MainContainer/>\n                            </PrivateRoute>\n                        </Switch>\n                    </Router>\n\n                </Provider>\n            );\n        }\n    }\n}\n\nfunction PrivateRoute({children, ...rest}) {\n            return (\n                <Route\n                    {...rest}\n                    render={props =>\n                        {\n                            if (store.getState().auth.isAuthenticated === true) {\n                                return children;\n                            }else{\n                                return <Redirect to={{pathname: \"/\"}} />;\n                            }\n                        }\n                    }\n                />\n            );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('form-container')\n);\n"],"sourceRoot":""}